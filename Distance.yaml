esphome:
  name: radar-presence
  friendly_name: Radar de Présence

# Configuration matérielle pour ESP32
esp32:
  board: esp32dev

# Configuration des journaux
logger:
  level: INFO
  baud_rate: 0

# Configuration API Home Assistant
api:
  encryption:
    key: "jyzHW0ExQcjY7aT3+BCVFXNaaMbXNPsF9mvLlB6MIxE="

# Mise à jour OTA (Over The Air)
ota:
  - platform: esphome
    password: "ab67bdc4a625868a8b2b66c8aef85600"

# Configuration WiFi
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  
  # Fallback en cas d'échec de connexion
  ap:
    ssid: "Radar-Fallback"
    password: "radar12345"

# Configuration UART pour le capteur LD2420
uart:
  id: uart_radar
  tx_pin: GPIO17  # Broche de transmission
  rx_pin: GPIO33  # Broche de réception
  baud_rate: 115200
  parity: NONE
  stop_bits: 1
 
# Configuration du capteur LD2420
ld2420:

# Variables globales pour la calibration
globals:
  - id: calibration_distance
    type: float
    restore_value: true
    initial_value: '0'

# Capteurs textuels
text_sensor:
  - platform: ld2420
    fw_version:
      name: "Version Firmware"
      icon: mdi:chip
  
  - platform: template
    name: "Statut Calibration"
    icon: mdi:ruler-square
    id: calibration_status
    lambda: |-
      return {"Non calibre"};

# Capteurs numériques
sensor:
  - platform: ld2420
    moving_distance:
      name: "Distance Mouvement"
      icon: mdi:ruler
      unit_of_measurement: "m"
      accuracy_decimals: 2
      id: moving_distance_sensor
      on_value:
        then:
          - lambda: |-
              if (id(calibration_mode).state) {
                id(calibration_distance) = x;
                id(calibration_status).publish_state("Calibré à " + to_string(x) + "m");
                id(calibration_mode).publish_state(false);
              }
  
  # Capteur de distance calibrée
  - platform: template
    name: "Distance Calibrée"
    icon: mdi:tape-measure
    unit_of_measurement: "m"
    accuracy_decimals: 2
    update_interval: 1s
    lambda: |-
      if (id(calibration_distance) > 0) {
        return id(moving_distance_sensor).state - id(calibration_distance);
      } else {
        return id(moving_distance_sensor).state;
      }
  
  # Ajout d'un capteur de batterie
  - platform: wifi_signal
    name: "Signal WiFi"
    update_interval: 60s

# Capteurs binaires
# Capteurs binaires
binary_sensor:
  - platform: ld2420
    has_target:
      name: "Présence Détectée"
      device_class: occupancy
      icon: mdi:motion-sensor
  
  # Mode de calibration
  - platform: template
    name: "Mode Calibration"
    icon: mdi:target
    id: calibration_mode
    lambda: |-
      return false;

# Sélecteurs
select:
  - platform: ld2420
    operating_mode:
      name: "Mode de Fonctionnement"
      icon: mdi:cog

# Paramètres numériques
number:
  - platform: ld2420
    presence_timeout:
      name: "Délai de Présence"
      icon: mdi:timer-outline
      unit_of_measurement: "s"
    
    min_gate_distance:
      name: "Distance Minimale"
      icon: mdi:arrow-collapse
      unit_of_measurement: "m"
    
    max_gate_distance:
      name: "Distance Maximale"
      icon: mdi:arrow-expand
      unit_of_measurement: "m"
    
    gate_select:
      name: "Sélection de Zone"
      icon: mdi:gate
    
    still_threshold:
      name: "Seuil Immobile"
      icon: mdi:human-male
    
    move_threshold:
      name: "Seuil Mouvement"
      icon: mdi:run
    
    gate_move_sensitivity:
      name: "Sensibilité Mouvement"
      icon: mdi:tune
    
    gate_still_sensitivity:
      name: "Sensibilité Immobile"
      icon: mdi:tune-vertical
  
  # Valeur manuelle de calibration
  - platform: template
    name: "Valeur Calibration"
    icon: mdi:pencil
    min_value: 0
    max_value: 10
    step: 0.01
    optimistic: true
    initial_value: 0
    unit_of_measurement: "m"
    id: manual_calibration
    on_value:
      then:
        - lambda: |-
            id(calibration_distance) = x;
            id(calibration_status).publish_state("Calibré manuellement à " + to_string(x) + "m");

# Boutons
button:
  - platform: ld2420
    apply_config:
      name: "Appliquer Configuration"
      icon: mdi:check
    
    factory_reset:
      name: "Réinitialisation d'Usine"
      icon: mdi:factory
    
    restart_module:
      name: "Redémarrer Module"
      icon: mdi:restart
    
    revert_config:
      name: "Annuler Modifications"
      icon: mdi:undo
  
  # Bouton pour démarrer la calibration automatique
  - platform: template
    name: "Démarrer Calibration"
    icon: mdi:target
    on_press:
      then:
        - binary_sensor.template.publish:
            id: calibration_mode
            state: true
        - text_sensor.template.publish:
            id: calibration_status
            state: "En attente de calibration..."
        - logger.log: "Mode calibration activé"
  
  # Bouton pour réinitialiser la calibration
  - platform: template
    name: "Réinitialiser Calibration"
    icon: mdi:restart
    on_press:
      then:
        - globals.set:
            id: calibration_distance
            value: '0'
        - text_sensor.template.publish:
            id: calibration_status
            state: "Non calibré"
        - logger.log: "Calibration réinitialisée"
